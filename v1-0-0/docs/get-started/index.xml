<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/</link><description>Recent content in Getting Started on</description><generator>Hugo</generator><language>v1-0-0</language><atom:link href="https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Requirements</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/requirements/</guid><description>&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">ðŸ’¡ &lt;/div>
 
 &lt;div class="w-100">Fixture Monkey is designed for test environments. It is not recommended for production use. &lt;/div>
 
&lt;/div>

&lt;h2 id="prerequisites">Prerequisites &lt;a href="#prerequisites" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>JDK 1.8 or higher (Or Kotlin 1.8 or higher)&lt;/li>
&lt;li>JUnit 5 platform&lt;/li>
&lt;li>jqwik 1.7.3&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="dependencies">Dependencies &lt;a href="#dependencies" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Dependency&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>fixture-monkey&lt;/td>
 &lt;td>Core library&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fixture-monkey-starter&lt;/td>
 &lt;td>Starter dependency for fixture monkey&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fixture-monkey-kotlin&lt;/td>
 &lt;td>Kotlin support&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>fixture-monkey-starter-kotlin&lt;/td>
 &lt;td>Starter dependency for fixture monkey kotlin&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>fixture-monkey-starter&lt;/strong> is a starter dependency that comes with pre-configured dependencies such as fixture-monkey-jakarta-validation to help you get started using Fixture Monkey.&lt;/p></description></item><item><title>Creating test objects</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/creating-test-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/creating-test-objects/</guid><description>&lt;blockquote>
&lt;p>Fixture Monkey works in both Java and Kotlin.
We have a separate &amp;lsquo;Getting Started&amp;rsquo; page for each environment you can use: &lt;a href="../creating-test-objects">Java&lt;/a>, &lt;a href="../creating-test-objects-without-lombok">Java without Lombok&lt;/a>, and &lt;a href="../creating-objects-in-kotlin">Kotlin&lt;/a>.&lt;/p>
&lt;p>This page explains the Java environment. Please refer to the appropriate page for your environment.&lt;/p>&lt;/blockquote>
&lt;p>Consider a scenario where you need a test fixture for a Product class, as shown below:&lt;/p>
&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">ðŸ’¡ &lt;/div>
 
 &lt;div class="w-100">lombok.anyConstructor.addConstructorProperties=true should be added in lombok.config &lt;/div>
 
&lt;/div>

&lt;pre>&lt;code class="language-java">@Value
public class Product {
 long id;

 String productName;

 long price;

 List&amp;lt;String&amp;gt; options;

 Instant createdAt;

 ProductType productType;

 Map&amp;lt;Integer, String&amp;gt; merchantInfo;
}
&lt;/code>&lt;/pre>
&lt;p>(Note that the Lombok annotation &lt;code>@Value&lt;/code> is used to make Immutable classes. If you&amp;rsquo;re working in an environment without Lombok, go to &lt;a href="../creating-test-objects-without-lombok">creating test objects without lombok&lt;/a>)&lt;/p></description></item><item><title>Creating test objects without Lombok</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/creating-test-objects-without-lombok/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/creating-test-objects-without-lombok/</guid><description>&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">ðŸ’¡ &lt;/div>
 
 &lt;div class="w-100">If you're using Lombok in your project, feel free to move on to the next page. &lt;/div>
 
&lt;/div>

&lt;p>Consider a scenario where you need a test fixture for a Product class, as shown below:&lt;/p>
&lt;pre>&lt;code class="language-java">public class Product {
 private long id;

 private String productName;

 private long price;

 private List&amp;lt;String&amp;gt; options;

 private Instant createdAt;

 private ProductType productType;

 private Map&amp;lt;Integer, String&amp;gt; merchantInfo;

 public Product() {
 }

 public void setId(long id) {
 this.id = id;
 }

 public void setProductName(String productName) {
 this.productName = productName;
 }

 public void setPrice(long price) {
 this.price = price;
 }

 public void setOptions(List&amp;lt;String&amp;gt; options) {
 this.options = options;
 }

 public void setCreatedAt(Instant createdAt) {
 this.createdAt = createdAt;
 }

 public void setProductType(ProductType productType) {
 this.productType = productType;
 }

 public void setMerchantInfo(Map&amp;lt;Integer, String&amp;gt; merchantInfo) {
 this.merchantInfo = merchantInfo;
 }
}
&lt;/code>&lt;/pre>
&lt;p>With the Fixture Monkey library, generating an instance of Product becomes remarkably simple, requiring just few lines of code.&lt;/p></description></item><item><title>Adding Bean Validation</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/adding-bean-validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/adding-bean-validation/</guid><description>&lt;p>Sometimes, you might want to create a valid test object that adheres to the constraints specified by the Bean Validation annotations on your class.&lt;/p>
&lt;p>Fixture Monkey supports constraint annotations from the &lt;code>jakarta.validation.constraints&lt;/code> and &lt;code>javax.validation.constraints&lt;/code> packages.&lt;/p>
&lt;p>To enable this feature, you need to add the &lt;code>fixture-monkey-jakarta-validation&lt;/code> dependency (or &lt;code>fixture-monkey-javax-validation&lt;/code> if you are using javax.validation.constraints) to your project as follows:&lt;/p>
&lt;h5 id="gradle">Gradle &lt;a href="#gradle" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h5>
&lt;pre>&lt;code class="language-groovy">testImplementation(&amp;quot;com.navercorp.fixturemonkey:fixture-monkey-jakarta-validation:1.1.10&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h5 id="maven">Maven &lt;a href="#maven" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h5>
&lt;pre>&lt;code class="language-xml">&amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;com.navercorp.fixturemonkey&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;fixture-monkey-jakarta-validation&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;1.1.10&amp;lt;/version&amp;gt;
 &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>Fixture Monkey provides additional features as plugins.&lt;/p></description></item><item><title>Customizing objects</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/customizing-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/customizing-objects/</guid><description>&lt;p>Suppose you need to customize your test fixture for a specific unit test.
In that case, you can use Fixture Monkey to generate a builder and further customize it.&lt;/p>
&lt;pre>&lt;code class="language-java">@Value
public class Product {
 long id;

 String productName;

 long price;

 List&amp;lt;String&amp;gt; options;

 Instant createdAt;
}
&lt;/code>&lt;/pre>
&lt;p>For example, for a certain test you might need a Product instance with an id of 1,000.&lt;/p>
&lt;p>In order to do this, you can get a type builder from fixture monkey with the &lt;code>giveMeBuilder&lt;/code> method.
The Builder allows chaining additional method calls to customize your fixture.
In this case you can use the &lt;code>set()&lt;/code> function to set the id to 1,000.
From the Builder use &lt;code>sample()&lt;/code> to get an instance from the builder.&lt;/p></description></item><item><title>Creating objects in Kotlin</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/creating-objects-in-kotlin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/get-started/creating-objects-in-kotlin/</guid><description>&lt;p>Fixture Monkey also supports generating classes written in Kotlin code.&lt;/p>
&lt;p>In order to do this, first make sure you added the &lt;code>fixture-monkey-starter-kotlin&lt;/code> dependency.&lt;/p>
&lt;p>Then we can add the Kotlin Plugin, to enable additional features of fixture monkey that support using Kotlin.&lt;/p>
&lt;pre>&lt;code class="language-kotlin">@Test
fun test() {
 val fixtureMonkey = FixtureMonkey.builder()
 .plugin(KotlinPlugin())
 .build()
}
&lt;/code>&lt;/pre>
&lt;p>The Kotlin plugin changes the default &lt;code>ObjectIntrospector&lt;/code> to &lt;code>PrimaryConstructorArbitraryIntrospector&lt;/code>,
which generates Kotlin classes with their primary constructor.&lt;/p></description></item></channel></rss>
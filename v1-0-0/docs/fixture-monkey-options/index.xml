<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fixture Monkey Options on</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/</link><description>Recent content in Fixture Monkey Options on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/index.xml" rel="self" type="application/rss+xml"/><item><title>Concepts</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/concepts/</guid><description>Before you learn about the options Fixture Monkey provides, there are a few things you need to know.
Property # In the documentation, the term property is consistently used instead of field when referring to the characteristics of a class&amp;rsquo;s object. While it has the same name as &amp;lsquo;property&amp;rsquo; in Kotlin, the concept is different in Fixture Monkey.
Fixture Monkey&amp;rsquo;s initial structure was primarily based on fields, which imposed limitations on configuration and control through methods and other mechanisms.</description></item><item><title>Generation Options</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/generation-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/generation-options/</guid><description>To create a complex object that matches your desired configurations, Fixture Monkey provides a variety of options for creating objects.
These options are accessible through the FixtureMonkeyBuilder.
Implement your own Object Generator # ObjectIntrospector # objectIntrospector
An ObjectIntrospector determines how Fixture Monkey creates objects. The objectIntrospector option allows you to specify the default behavior when generating an object.
As discussed in the introspector section, you can use predefined introspectors provided by Fixture Monkey or create your own custom introspector.</description></item><item><title>Customization Options</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/customization-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/customization-options/</guid><description>Fixture Monkey also provides options through the FixtureMonkeyBuilder to customize objects to have the desired values or to use custom property names.
Change how property names are resolved # defaultPropertyNameResolver, pushPropertyNameResolver, pushAssignableTypePropertyNameResolver, pushExactTypePropertyNameResolver
Options related to the PropertyNameResolver allow you to customize how you refer to your properties.
The defaultPropertyNameResolver option is used to change the way property names are figured out for all types. If you want to make specific changes for certain types, you can use pushPropertyNameResolver, pushAssignableTypePropertyNameResolver, or pushExactTypePropertyNameResolver.</description></item><item><title>Other Options</title><link>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/other-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-0-0/docs/fixture-monkey-options/other-options/</guid><description>This section explains some additional options that the FixtureMonkeyBuilder provide.
Add plugins # Fixture Monkey offers several additional features, including support for third-party libraries through plugins. You can use the plugin option to use these additional features.
For example, you can add the Jackson plugin as shown below. This will allow you to use Jackson features such as JacksonObjectArbitraryIntrospector and Jackson annotation support.
Java Kotlin FixtureMonkey fixtureMonkey = FixtureMonkey.builder() .plugin(new JacksonPlugin()) .</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jackson 플러그인 on</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jackson-plugin/</link><description>Recent content in Jackson 플러그인 on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jackson-plugin/index.xml" rel="self" type="application/rss+xml"/><item><title>기능</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jackson-plugin/features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jackson-plugin/features/</guid><description>Fixture monkey는 Fixture Monkey Jackson 플러그인을 사용하여 Jackson를 지원합니다.
JacksonObjectArbitraryIntrospector를 기본 introspector로 사용하여 Jackson 객체 매퍼를 통해 객체를 생성하는 기능을 지원합니다. @JsonIgnore, @JsonProperty와 같은 Jackson 어노테이션을 지원합니다. 의존성 # Gradle # testImplementation(&amp;quot;com.navercorp.fixturemonkey:fixture-monkey-jackson:1.1.10&amp;quot;) Maven # &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.navercorp.fixturemonkey&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;fixture-monkey-jackson&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.1.10&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; 플러그인 # Java Kotlin FixtureMonkey fixtureMonkey = FixtureMonkey.builder() .plugin(new JacksonPlugin()) .build(); val fixtureMonkey = FixtureMonkey.builder() .plugin(JacksonPlugin()) .build() JacksonPlugin을 사용할 때 사용자 정의 객체 매퍼를 사용하고싶다면 JacksonPlugin 생성자에 objectMapper를 전달해줄 수 있습니다.</description></item><item><title>JacksonObjectArbitraryIntrospector</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jackson-plugin/jackson-object-arbitrary-introspector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jackson-plugin/jackson-object-arbitrary-introspector/</guid><description>JacksonObjectArbitraryIntrospector # Jackson 플러그인이 추가되면 JacksonObjectArbitraryIntrospector가 기본 introspector로 지정됩니다. 주어진 클래스의 프로퍼티들을 생성해 맵에 추가하고 Jackson의 객체 매퍼를 사용하여 역직렬화합니다.
예제 자바 클래스 :
@Value public class Product { long id; String productName; long price; List&amp;lt;String&amp;gt; options; Instant createdAt; } JacksonObjectArbitraryIntrospector 사용 : Java Kotlin @Test void test() { FixtureMonkey fixtureMonkey = FixtureMonkey.builder() .plugin(new JacksonPlugin()) .build(); Product product = fixtureMonkey.giveMeOne(Product.class); } testImplementation(&amp;#34;com.navercorp.fixturemonkey:fixture-monkey-starter-kotlin:1.1.10&amp;#34;) testImplementation(&amp;#34;com.fasterxml.jackson.module:jackson-module-kotlin&amp;#34;) @Test fun test() { FixtureMonkey fixtureMonkey = FixtureMonkey.</description></item><item><title>Jackson 어노테이션</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jackson-plugin/jackson-annotations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jackson-plugin/jackson-annotations/</guid><description>Jackson 플러그인을 사용하면 일부 Jackson 어노테이션도 지원됩니다.
@JsonProperty, @JsonIgnore # String 표현식을 사용하여 속성을 사용자 정의할 때는 @JsonProperty에서 지정한 속성 이름을 활용할 수 있습니다.
Fixture Monkey는 객체를 생성할 때 @JsonIgnore가 지정된 속성을 null 값으로 생성합니다.
다음 예제는 @JsonProperty와 @JsonIgnore을 Fixture Monkey에서 활용하는 방법을 보여줍니다.
예제 자바 클래스 :
@Value // lombok getter, setter public class Product { long id; @JsonProperty(&amp;quot;name&amp;quot;) String productName; long price; @JsonIgnore List&amp;lt;String&amp;gt; options; Instant createdAt; } Java Kotlin @Test void test() { // given FixtureMonkey fixtureMonkey = FixtureMonkey.</description></item></channel></rss>
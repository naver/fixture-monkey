<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jakarta Validation 플러그인 on</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jakarta-validation-plugin/</link><description>Recent content in Jakarta Validation 플러그인 on</description><generator>Hugo</generator><language>v1-1-0-kor</language><atom:link href="https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jakarta-validation-plugin/index.xml" rel="self" type="application/rss+xml"/><item><title>기능</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jakarta-validation-plugin/features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jakarta-validation-plugin/features/</guid><description>&lt;p>Fixture Monkey는 Fixture Monkey Jakarta Validation 플러그인을 사용하여 Jakarta Bean Validation 3.0 어노테이션들을 기반으로 유효한 데이터 생성을 지원합니다.&lt;/p>
&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">💡 &lt;/div>
 
 &lt;div class="w-100">Fixture Monkey Javax Validation 플러그인은 Javax Bean Validation도 지원합니다. &lt;/div>
 
&lt;/div>

&lt;h3 id="dependencies">Dependencies &lt;a href="#dependencies" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;h4 id="gradle">Gradle &lt;a href="#gradle" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;pre>&lt;code>testImplementation(&amp;quot;com.navercorp.fixturemonkey:fixture-monkey-jakarta-validation:1.1.10&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h4 id="maven">Maven &lt;a href="#maven" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;pre>&lt;code>&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;com.navercorp.fixturemonkey&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;fixture-monkey-jakarta-validation&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt;
&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>해당 플로그인을 추가하면 Jakarta Validation API와 Hibernate Validator가 의존성의 일부로 포함됩니다.&lt;/p>
&lt;h3 id="plugin">Plugin &lt;a href="#plugin" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-Java">FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
 .plugin(new JakartaValidationPlugin())
 .build();
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Kotlin&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-Kotlin">val fixtureMonkey = FixtureMonkey.builder()
 .plugin(JakartaValidationPlugin())
 .build()
&lt;/code>&lt;/pre></description></item><item><title>Bean 유효성 검사</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jakarta-validation-plugin/bean-validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/plugins/jakarta-validation-plugin/bean-validation/</guid><description>&lt;h3 id="유효한-데이터-생성하기">유효한 데이터 생성하기 &lt;a href="#%ec%9c%a0%ed%9a%a8%ed%95%9c-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%83%9d%ec%84%b1%ed%95%98%ea%b8%b0" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;p>Jakarta Validation 플러그인을 사용하여 프로퍼티에 있는 Jakarta Bean Validation 어노테이션들을 기반으로 유효한 데이터를 생성할 수 있습니다.&lt;/p>
&lt;p>예를 들어, 다음과 같이 어노테이션들이 지정된 Product 클래스가 있을 수 있습니다:&lt;/p>
&lt;pre>&lt;code>@Value
public class Product {
@Min(1)
long id;

 @NotBlank
 String productName;

 @Max(100000)
 long price;

 @Size(min = 3)
 List&amp;lt;@NotBlank String&amp;gt; options;

 @Past
 Instant createdAt;
}
&lt;/code>&lt;/pre>
&lt;p>위 어노테이션들을 준수하는 Product 클래스의 인스턴스는 다음과 같은 방식으로 생성될 수 있습니다:&lt;/p>
&lt;pre>&lt;code>@Test
void test() {
 // given
 FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
 .objectIntrospector(ConstructorPropertiesArbitraryIntrospector.INSTANCE)
 .plugin(new JakartaValidationPlugin())
 .build();

 // when
 Product actual = fixtureMonkey.giveMeOne(Product.class);

 // then
 then(actual).isNotNull();
 then(actual.getId()).isGreaterThan(0);
 then(actual.getProductName()).isNotBlank();
 then(actual.getPrice()).isLessThanOrEqualTo(100000);
 then(actual.getOptions().size()).isGreaterThanOrEqualTo(3);
 then(actual.getOptions()).allSatisfy(it -&amp;gt; then(it).isNotEmpty());
 then(actual.getCreatedAt()).isNotNull().isLessThanOrEqualTo(Instant.now());
}
&lt;/code>&lt;/pre>
&lt;h3 id="지원하는-어노테이션들">지원하는 어노테이션들 &lt;a href="#%ec%a7%80%ec%9b%90%ed%95%98%eb%8a%94-%ec%96%b4%eb%85%b8%ed%85%8c%ec%9d%b4%ec%85%98%eb%93%a4" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;p>&lt;code>jakarta.validation.constraints package&lt;/code> 의 모든 어노테이션들을 지원합니다.
각 타입별로 알맞은 어노테이션 제약들을 지원합니다.&lt;/p></description></item></channel></rss>
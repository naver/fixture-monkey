<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cheat sheet on</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/cheat-sheet/</link><description>Recent content in Cheat sheet on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/cheat-sheet/index.xml" rel="self" type="application/rss+xml"/><item><title>모범 사례</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/cheat-sheet/best-practices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/cheat-sheet/best-practices/</guid><description>픽스쳐 몽키 모범 사례 # 이 가이드는 테스트에서 픽스쳐 몽키를 효과적으로 사용하기 위한 실용적인 팁과 모범 사례를 제공합니다.
1. 간단하고 집중된 테스트 작성하기 # 테스트에 중요한 것만 커스터마이징하기: 테스트 동작에 영향을 주지 않는 필드의 값은 설정하지 마세요. Java Kotlin // 좋음 - 테스트와 관련된 것만 설정 @Test void shouldCalculateDiscount() { Product product = fixtureMonkey.giveMeBuilder(Product.class) .set(&amp;#34;price&amp;#34;, 100.0) // 할인 계산에는 가격만 중요함 .sample(); double discount = productService.calculateDiscount(product); assertThat(discount).isEqualTo(10.0); } // 좋음 - 테스트와 관련된 것만 설정 @Test fun shouldCalculateDiscount() { val product = fixtureMonkey.</description></item><item><title>자주 묻는 질문</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/cheat-sheet/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/cheat-sheet/faq/</guid><description>픽스쳐 몽키를 어떻게 시작하나요? # 픽스쳐 몽키는 랜덤 값을 가진 테스트 객체를 쉽게 생성할 수 있는 방법을 제공합니다. 다음과 같이 시작할 수 있습니다:
Java Kotlin // FixtureMonkey 인스턴스 생성 FixtureMonkey fixtureMonkey = FixtureMonkey.create(); // 랜덤 객체 생성 Person person = fixtureMonkey.giveMeOne(Person.class); // FixtureMonkey 인스턴스 생성 val fixtureMonkey = FixtureMonkey.create() // 랜덤 객체 생성 val person = fixtureMonkey.giveMeOne&amp;lt;Person&amp;gt;() 픽스쳐 몽키를 프로젝트에 어떻게 추가하나요? # Maven이나 Gradle 프로젝트에 쉽게 픽스쳐 몽키를 추가할 수 있습니다:</description></item></channel></rss>
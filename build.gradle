buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

allprojects {
    apply plugin: "idea"

    repositories {
        mavenCentral()
    }

    group = "com.navercorp.fixturemonkey"
    version = "0.4.1-SNAPSHOT"
}

subprojects {
    apply plugin: "java-library"
    apply plugin: "maven-publish"
    apply plugin: "signing"

    ext {
        JUNIT_ENGINE_VERSION = "1.8.1"
        JUNIT_JUPITER_VERSION = "5.8.2"
        JQWIK_VERSION = "1.7.0"
    }

    dependencies {
        api("com.google.code.findbugs:jsr305:3.0.2")
        implementation("com.google.code.findbugs:findbugs-annotations:3.0.1")
        compileOnly("org.slf4j:slf4j-api:1.7.25")
        testImplementation("ch.qos.logback:logback-classic:1.2.9")
    }

    tasks.withType(Javadoc).all { enabled = false }

    java {
        withJavadocJar()
        withSourcesJar()
        toolchain {languageVersion = JavaLanguageVersion.of(8)}
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                repositories {
                    maven {
                        def ossrhUsername = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                        def ossrhPassword = project.hasProperty("ossrhPassword") ? ossrhPassword : ""

                        credentials {
                            username ossrhUsername
                            password ossrhPassword
                        }

                        def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                        def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                        url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
                    }
                }

                pom {
                    name = "fixture-monkey"
                    description = "The easiest way to generate controllable arbitrary test objects"
                    url = "http://github.com/naver/fixture-monkey"
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = "ah.jo"
                            name = "SeongAh Jo"
                            email = "ah.jo@navercorp.com"
                        }
                        developer {
                            id = "mhyeon-lee"
                            name = "Myeonghyeon Lee"
                            email = "mheyon.lee@navercorp.com"
                        }
                    }
                    scm {
                        connection = "scm:git:git://github.com/naver/fixture-monkey.git"
                        developerConnection = "scm:git:ssh://github.com/naver/fixture-monkey.git"
                        url = "http://github.com/naver/fixture-monkey"
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    tasks.withType(Sign) {
        onlyIf { !version.endsWith("SNAPSHOT") }
    }
}

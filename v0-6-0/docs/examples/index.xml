<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Practices on</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/</link><description>Recent content in Practices on</description><generator>Hugo</generator><language>v0-6-0</language><atom:link href="https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Apply JSR380: Bean Validation 2.0 annotations</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/javaxvalidation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/javaxvalidation/</guid><description>&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> This practice should add extra module because it depends on third-party library &lt;code>javax.validation&lt;/code>&lt;/div>
 
 
&lt;/div>

&lt;p>Creating an instance validated by &lt;a href="https://jcp.org/en/jsr/detail?id=380">JSR380: Bean Validation 2.0&lt;/a> annotations&lt;/p>
&lt;h2 id="1-adding-dependency">1. Adding dependency &lt;a href="#1-adding-dependency" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-groovy">testImplementation(&amp;quot;com.navercorp.fixturemonkey:fixture-monkey-javax-validation:1.1.10&amp;quot;)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-xml">&amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;com.navercorp.fixturemonkey&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;fixture-monkey-javax-validation&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;1.1.10&amp;lt;/version&amp;gt;
 &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="2-adding-plugin-option">2. Adding &lt;code>plugin&lt;/code> option &lt;a href="#2-adding-plugin-option" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
 .plugin(new JavaxValidationPlugin())
 .build();
&lt;/code>&lt;/pre></description></item><item><title>Altering Java class default value</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/javadefaultvalue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/javadefaultvalue/</guid><description>&lt;h2 id="1-implementing-javatypearbitrarygenerator-interface">1. Implementing JavaTypeArbitraryGenerator interface &lt;a href="#1-implementing-javatypearbitrarygenerator-interface" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;p>Override specific type method to redefine default value&lt;/p>
&lt;pre>&lt;code class="language-java">public class CustomJavaTypeArbitraryGenerator implements JavaTypeArbitraryGenerator{
 @Override
 public StringArbitrary strings(){
 ...
 }
}
&lt;/code>&lt;/pre>
&lt;h2 id="2-altering-javatypearbitrarygenerator--option">2. Altering &lt;code>javaTypeArbitraryGenerator&lt;/code> option &lt;a href="#2-altering-javatypearbitrarygenerator--option" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
 .plugin(new JavaxValidationPlugin())
 .javaTypeArbitraryGenerator(new CustomJavaTypeArbitraryGenerator())
 .build();
&lt;/code>&lt;/pre></description></item><item><title>Adding Java class custom annotations</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/customannotation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/customannotation/</guid><description>&lt;h2 id="1-implementing-javaarbitraryresolver-interface">1. Implementing JavaArbitraryResolver interface &lt;a href="#1-implementing-javaarbitraryresolver-interface" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;p>Override specific type method to define how annotation works&lt;/p>
&lt;pre>&lt;code class="language-java">public class CustomJavaArbitraryResolver implements JavaArbitraryResolver{
 @Override
 public Arbitrary&amp;lt;String&amp;gt; strings(StringArbitrary stringArbitrary, ArbitraryGeneratorContext context) {
 ...
	}
}
&lt;/code>&lt;/pre>
&lt;h3 id="concrete-class">Concrete Class &lt;a href="#concrete-class" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>JavaxValidationJavaArbitraryResolver&lt;/li>
&lt;/ul>
&lt;h2 id="2-altering-javaarbitraryresolver-option">2. Altering &lt;code>javaArbitraryResolver&lt;/code> option &lt;a href="#2-altering-javaarbitraryresolver-option" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
 .plugin(new JavaxValidationPlugin())
 .javaArbitraryResolver(new CustomJavaArbitraryResolver())
 .build();
&lt;/code>&lt;/pre></description></item><item><title>Altering the way of instantiating</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/objectgenerator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/objectgenerator/</guid><description>&lt;h2 id="1-altering-instantiating">1. Altering instantiating &lt;a href="#1-altering-instantiating" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;h3 id="beanarbitraryintrospector">BeanArbitraryIntrospector &lt;a href="#beanarbitraryintrospector" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;h4 id="preconditions">Preconditions &lt;a href="#preconditions" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;ol>
&lt;li>No args constructor&lt;/li>
&lt;li>Setter&lt;/li>
&lt;/ol>
&lt;h3 id="fieldreflectionarbitraryintrospector">FieldReflectionArbitraryIntrospector &lt;a href="#fieldreflectionarbitraryintrospector" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;h4 id="preconditions-1">Preconditions &lt;a href="#preconditions-1" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;ol>
&lt;li>No args constructor&lt;/li>
&lt;/ol>
&lt;h3 id="builderarbitraryintrospector">BuilderArbitraryIntrospector &lt;a href="#builderarbitraryintrospector" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;h4 id="preconditions-2">Preconditions &lt;a href="#preconditions-2" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;ol>
&lt;li>Builder&lt;/li>
&lt;/ol>
&lt;h3 id="constructorpropertiesintrospector">ConstructorPropertiesIntrospector &lt;a href="#constructorpropertiesintrospector" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;h4 id="preconditions-3">Preconditions &lt;a href="#preconditions-3" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;p>Should satisfy one of below preconditions&lt;/p>
&lt;ul>
&lt;li>record type&lt;/li>
&lt;li>lombok &lt;code>@Value&lt;/code>, enabled &lt;code>lombok.anyConstructor.addConstructorProperties=true&lt;/code> option&lt;/li>
&lt;li>any constructors with &lt;code>@ConstructorProperties&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> Multiple constructors with record would be instantiated by constructor with &lt;code>@ConstructorProperties&lt;/code>&lt;/div>
 
 
&lt;/div>

&lt;h3 id="factorymethodarbitraryintrospector">FactoryMethodArbitraryIntrospector &lt;a href="#factorymethodarbitraryintrospector" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;h4 id="preconditions-4">Preconditions &lt;a href="#preconditions-4" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;ul>
&lt;li>static factory method&lt;/li>
&lt;/ul>
&lt;h3 id="primaryconstructorarbitraryintrospector">PrimaryConstructorArbitraryIntrospector &lt;a href="#primaryconstructorarbitraryintrospector" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;h4 id="preconditions-5">Preconditions &lt;a href="#preconditions-5" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;ol>
&lt;li>Kotlin class&lt;/li>
&lt;li>Primary constructor.&lt;/li>
&lt;/ol>
&lt;h3 id="jacksonarbitraryintrospector">JacksonArbitraryIntrospector &lt;a href="#jacksonarbitraryintrospector" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> This practice should add extra module because it depends on third-party library &lt;code>Jackson&lt;/code>&lt;/div>
 
 
&lt;/div>

&lt;h4 id="preconditions-6">Preconditions &lt;a href="#preconditions-6" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;ol>
&lt;li>Adding &lt;code>fixture-monkey-jackson&lt;/code> dependency&lt;/li>
&lt;li>serializable / deserializable by Jackson&lt;/li>
&lt;/ol>
&lt;h2 id="2-altering-objectintrospector-option">2. Altering &lt;code>objectIntrospector&lt;/code> option &lt;a href="#2-altering-objectintrospector-option" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
 .objectIntrospector(selectedIntrospector)
 .build();
&lt;/code>&lt;/pre></description></item><item><title>Setting field value</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/fieldset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/fieldset/</guid><description>&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> This practice deals with manipulation &lt;code>set&lt;/code>&lt;/div>
 
 
&lt;/div>

&lt;h2 id="0-class">0. Class &lt;a href="#0-class" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">public class Generate {
	String value;

	List&amp;lt;String&amp;gt; values;
}
&lt;/code>&lt;/pre>
&lt;h2 id="1-generating-arbitrarybuilder">1. Generating ArbitraryBuilder &lt;a href="#1-generating-arbitrarybuilder" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">ArbitraryBuilder&amp;lt;Generate&amp;gt; generateBuilder = fixtureMonkey.giveMeBuilder(Generate.class);
&lt;/code>&lt;/pre>
&lt;h2 id="2-setting-value">2. Setting value &lt;a href="#2-setting-value" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;h3 id="setting-field">Setting field &lt;a href="#setting-field" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>



&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-01-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-01-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-01-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-01-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-01-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-01-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-1-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-01-00" role="tabpanel" aria-labelled-by="tabs-01-00-tab" tabindex="1">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-01-01" role="tabpanel" aria-labelled-by="tabs-01-01-tab" tabindex="1">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h3 id="setting-field-n-th-element">Setting field n-th element &lt;a href="#setting-field-n-th-element" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>






&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-02-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-02-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-02-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-02-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-02-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-02-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-2-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-02-00" role="tabpanel" aria-labelled-by="tabs-02-00-tab" tabindex="2">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;values[n]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-02-01" role="tabpanel" aria-labelled-by="tabs-02-01-tab" tabindex="2">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h3 id="setting-field-all-elements">Setting field all elements &lt;a href="#setting-field-all-elements" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>






&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-03-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-03-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-03-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-03-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-03-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-03-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-3-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-03-00" role="tabpanel" aria-labelled-by="tabs-03-00-tab" tabindex="3">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;values[*]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-03-01" role="tabpanel" aria-labelled-by="tabs-03-01-tab" tabindex="3">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h3 id="setting-field-to-arbitrary-value">Setting field to arbitrary value &lt;a href="#setting-field-to-arbitrary-value" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>






&lt;ul class="nav nav-tabs" id="tabs-4" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-04-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-04-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-04-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-04-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-04-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-04-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-4-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-04-00" role="tabpanel" aria-labelled-by="tabs-04-00-tab" tabindex="4">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arbitraries&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">strings&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-04-01" role="tabpanel" aria-labelled-by="tabs-04-01-tab" tabindex="4">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arbitraries&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">strings&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h3 id="setting-field-n-th-element-to-arbitrary-value">Setting field n-th element to arbitrary value &lt;a href="#setting-field-n-th-element-to-arbitrary-value" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>






&lt;ul class="nav nav-tabs" id="tabs-5" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-05-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-05-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-05-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-05-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-05-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-05-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-5-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-05-00" role="tabpanel" aria-labelled-by="tabs-05-00-tab" tabindex="5">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;values[n]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arbitraries&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">strings&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-05-01" role="tabpanel" aria-labelled-by="tabs-05-01-tab" tabindex="5">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arbitraries&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">strings&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h3 id="setting-field-all-elements-to-arbitrary-value">Setting field all elements to arbitrary value &lt;a href="#setting-field-all-elements-to-arbitrary-value" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>






&lt;ul class="nav nav-tabs" id="tabs-6" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-06-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-06-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-06-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-06-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-06-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-06-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-6-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-06-00" role="tabpanel" aria-labelled-by="tabs-06-00-tab" tabindex="6">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;values[*]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arbitraries&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">strings&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-06-01" role="tabpanel" aria-labelled-by="tabs-06-01-tab" tabindex="6">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arbitraries&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">strings&lt;/span>&lt;span class="p">());&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div></description></item><item><title>Setting Map</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/mapset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/mapset/</guid><description>&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> This practice deals with manipulation &lt;code>setInner&lt;/code>&lt;/div>
 
 
&lt;/div>

&lt;h2 id="0-class">0. Class &lt;a href="#0-class" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">public class Generate {
 Map&amp;lt;String, String&amp;gt; namesById;
}
&lt;/code>&lt;/pre>
&lt;h2 id="1-generating-arbitrarybuilder">1. Generating ArbitraryBuilder &lt;a href="#1-generating-arbitrarybuilder" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">ArbitraryBuilder&amp;lt;Generate&amp;gt; generateBuilder = fixtureMonkey.giveMeBuilder(Generate.class);
&lt;/code>&lt;/pre>
&lt;h2 id="2-altering-map-size">2. Altering map size &lt;a href="#2-altering-map-size" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> &lt;p>Setting map without size would result in no change.&lt;/p>
&lt;p>Please check out if using &lt;code>size&lt;/code> before setting value&lt;/p>
&lt;/div>
 
 
&lt;/div>




&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-02-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-02-00" role="tab"
 aria-controls="tabs-02-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-02-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-02-01" role="tab"
 aria-controls="tabs-02-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-2-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-02-00" role="tabpanel" aria-labelled-by="tabs-02-00-tab" tabindex="2">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setInner&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">InnerSpec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;namesById&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-02-01" role="tabpanel" aria-labelled-by="tabs-02-01-tab" tabindex="2">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setInner&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InnerSpec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="k">property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;namesById&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h2 id="3-setting-field">3. Setting field &lt;a href="#3-setting-field" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;h3 id="setting-entry">Setting entry &lt;a href="#setting-entry" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>



&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-03-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-03-00" role="tab"
 aria-controls="tabs-03-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-03-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-03-01" role="tab"
 aria-controls="tabs-03-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-3-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-03-00" role="tabpanel" aria-labelled-by="tabs-03-00-tab" tabindex="3">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setInner&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">InnerSpec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;namesById&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">entry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-03-01" role="tabpanel" aria-labelled-by="tabs-03-01-tab" tabindex="3">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setInner&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InnerSpec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="k">property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;namesById&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h3 id="setting-map-key">Setting map key &lt;a href="#setting-map-key" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;p>Setting Map key



&lt;ul class="nav nav-tabs" id="tabs-4" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-04-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-04-00" role="tab"
 aria-controls="tabs-04-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-04-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-04-01" role="tab"
 aria-controls="tabs-04-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-4-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-04-00" role="tabpanel" aria-labelled-by="tabs-04-00-tab" tabindex="4">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setInner&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">InnerSpec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;namesById&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-04-01" role="tabpanel" aria-labelled-by="tabs-04-01-tab" tabindex="4">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setInner&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InnerSpec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="k">property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;namesById&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>
&lt;/p></description></item><item><title>Setting Nested Map</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/nestedmapset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/nestedmapset/</guid><description>&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> This practice deals with manipulation &lt;code>setInner&lt;/code>&lt;/div>
 
 
&lt;/div>

&lt;h2 id="0-class">0. Class &lt;a href="#0-class" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;p>It works even if key is map type or value is map type.&lt;/p>
&lt;pre>&lt;code class="language-java">public class Generate {
	Map&amp;lt;Map&amp;lt;String, String&amp;gt;, String&amp;gt; mapByString;
	Map&amp;lt;String, Map&amp;lt;String, String&amp;gt;&amp;gt; stringByMap;
}
&lt;/code>&lt;/pre>
&lt;h3 id="setting-nested-map-key">Setting nested map key &lt;a href="#setting-nested-map-key" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>



&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-01-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-01-00" role="tab"
 aria-controls="tabs-01-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-01-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-01-01" role="tab"
 aria-controls="tabs-01-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-1-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-01-00" role="tabpanel" aria-labelled-by="tabs-01-00-tab" tabindex="1">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setInner&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">InnerSpec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;mapByString&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">entry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-01-01" role="tabpanel" aria-labelled-by="tabs-01-01-tab" tabindex="1">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setInner&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InnerSpec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="k">property&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;mapByString&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">key&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;p>If setting value given key, check out &lt;code>entry&lt;/code> just as shown below&lt;/p></description></item><item><title>Altering Container Size</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/containersize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/containersize/</guid><description>&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> &lt;p>In Fixture Monkey Container means data structures including Collection.
ex. Map, Optional, Set, List&amp;hellip;&lt;/p>
&lt;p>user-defined data structures are also considered as a Container&lt;/p>
&lt;/div>
 
 
&lt;/div>

&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> This practice deals with manipulation &lt;code>size&lt;/code>.&lt;/div>
 
 
&lt;/div>

&lt;h2 id="0-class">0. Class &lt;a href="#0-class" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">public class Generate {
	List&amp;lt;GenerateElement&amp;gt; values;
}

public class GenerateElement {
	List&amp;lt;String&amp;gt; values;
}
&lt;/code>&lt;/pre>
&lt;h2 id="1-generating-arbitrarybuilder">1. Generating ArbitraryBuilder &lt;a href="#1-generating-arbitrarybuilder" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">ArbitraryBuilder&amp;lt;Generate&amp;gt; generateBuilder = fixtureMonkey.giveMeBuilder(Generate.class);
&lt;/code>&lt;/pre>
&lt;h2 id="2-1-alter-field-size">2-1. Alter field size &lt;a href="#2-1-alter-field-size" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>



&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-02-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-02-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-02-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-02-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-02-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-02-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-2-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-02-00" role="tabpanel" aria-labelled-by="tabs-02-00-tab" tabindex="2">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;values&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-02-01" role="tabpanel" aria-labelled-by="tabs-02-01-tab" tabindex="2">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sizeExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h2 id="2-2-alter-field-n-th-element-size">2-2. Alter field n-th element size &lt;a href="#2-2-alter-field-n-th-element-size" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>



&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-03-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-03-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-03-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-03-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-03-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-03-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-3-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-03-00" role="tabpanel" aria-labelled-by="tabs-03-00-tab" tabindex="3">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;values[n]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-03-01" role="tabpanel" aria-labelled-by="tabs-03-01-tab" tabindex="3">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sizeExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div>

&lt;h2 id="2-3-alter-field-all-elements-size">2-3. Alter field all elements size &lt;a href="#2-3-alter-field-all-elements-size" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>



&lt;ul class="nav nav-tabs" id="tabs-4" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-04-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-04-00" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;general expression&amp;#34;);" data-td-tp-persist="general expression" aria-controls="tabs-04-00" aria-selected="true">
 general expression
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-04-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-04-01" role="tab"
 onclick="tdPersistActiveTab(&amp;#34;kotlin exp&amp;#34;);" data-td-tp-persist="kotlin exp" aria-controls="tabs-04-01" aria-selected="false">
 Kotlin Exp
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-4-content">
 &lt;div class="tab-pane fade show active"
 id="tabs-04-00" role="tabpanel" aria-labelled-by="tabs-04-00-tab" tabindex="4">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;values[*]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
 &lt;div class="tab-pane fade"
 id="tabs-04-01" role="tabpanel" aria-labelled-by="tabs-04-01-tab" tabindex="4">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">generateBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sizeExp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Generate&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;/div>
&lt;/div></description></item><item><title>registering default ArbitraryBuilder</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/register/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/register/</guid><description>&lt;div class="alert alert-doks d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">&lt;/div>
 
 
 &lt;div class="w-100"> Registered &lt;code>ArbitraryBuilder&lt;/code> would be used as default &lt;code>ArbitraryBuilder&lt;/code>&lt;/div>
 
 
&lt;/div>

&lt;h2 id="0-class">0. Class &lt;a href="#0-class" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">public class GenerateString {
	String value;
}

public class GenerateInt {
	int value;
}
&lt;/code>&lt;/pre>
&lt;h2 id="1-register-one-type">1. Register one type &lt;a href="#1-register-one-type" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">FixtureMonkey fixtureMonkey=FixtureMonkey.builder()
	.register(
 GenerateString.class,
 fixture -&amp;gt; fixture.giveMeBuilder(GenerateString.class)
 .set(&amp;quot;value&amp;quot;, Arbitraries.strings().alpha())
 )
	.build();
&lt;/code>&lt;/pre>
&lt;h2 id="2-register-multiple-types">2. Register multiple types &lt;a href="#2-register-multiple-types" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;h3 id="register">register &lt;a href="#register" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;pre>&lt;code class="language-java">FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
	.register(
	 GenerateString.class,
	 fixture -&amp;gt; fixture.giveMeBuilder(GenerateString.class)
 .set(&amp;quot;value&amp;quot;, Arbitraries.strings().alpha())
 )
	.register(
 GenerateInt.class,
 fixture -&amp;gt; fixture.giveMeBuilder(GenerateInt.class)
 .set(&amp;quot;value&amp;quot;, Arbitraries.integers().between(1, 100))
	)
	.build();
&lt;/code>&lt;/pre>
&lt;h3 id="registergroup">registerGroup &lt;a href="#registergroup" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;h4 id="defining-registergroup">Defining registerGroup &lt;a href="#defining-registergroup" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;pre>&lt;code class="language-java">// using reflection
public class GenerateGroup {
	public ArbitraryBuilder&amp;lt;GenerateString&amp;gt; generateString(FixtureMonkey fixtureMonkey){
		return fixtureMonkey.giveMeBuilder(GenerateString.class)
			.set(&amp;quot;value&amp;quot;, Arbitraries.strings().numeric());
 }
	
	public ArbitraryBuilder&amp;lt;GenerateInt&amp;gt; generateInt(FixtureMonkey fixtureMonkey){
		return fixture.giveMeBuilder(GenerateInt.class)
			.set(&amp;quot;value&amp;quot;, Arbitraries.integers().between(1, 100));
 }
}

// using ArbitraryBuilderGroup interface
public class GenerateBuilderGroup implements ArbitraryBuilderGroup {
	@Override
	public ArbitraryBuilderCandidateList generateCandidateList() {
		return ArbitraryBuilderCandidateList.create()
			.add(
				ArbitraryBuilderCandidateFactory.of(GenerateString.class)
					.builder(
						arbitraryBuilder -&amp;gt; arbitraryBuilder
							.set(&amp;quot;value&amp;quot;, Arbitraries.strings().numeric())
					)
			)
			.add(
				ArbitraryBuilderCandidateFactory.of(GenerateInt.class)
					.builder(
						builder -&amp;gt; builder
							.set(&amp;quot;value&amp;quot;, Arbitraries.integers().between(1, 100))
					)
			);
	}
}
&lt;/code>&lt;/pre>
&lt;h4 id="add-registergroup-option">Add &lt;code>registerGroup&lt;/code> option &lt;a href="#add-registergroup-option" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;pre>&lt;code class="language-java">// using reflection
FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
 .registerGroup(GenerateGroup.class)
	.build();

// using ArbitraryBuilderGroup interface
FixtureMonkey fixtureMonkey = FixtureMonkey.builder()
	.registerGroup(new GenerateBuilderGroup())
	.build();
&lt;/code>&lt;/pre>
&lt;h4 id="example">Example &lt;a href="#example" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h4>
&lt;pre>&lt;code class="language-java">GenerateString generateString = fixtureMonkey.giveMeOne(GenerateString.class);
GenerateInt generateInt = fixtureMonkey.giveMeOne(GenerateInt.class);

then(generateString.getValue()).containsOnlyDigits()();
then(generateInt.getValue()).isBetween(1, 100);
&lt;/code>&lt;/pre></description></item><item><title>Add new container</title><link>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/newcontainer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v0-6-0/docs/examples/newcontainer/</guid><description>&lt;h2 id="example-class">Example Class &lt;a href="#example-class" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">public class Pair&amp;lt;S, T&amp;gt; {
		private final S first;
		private final T second;

		public Pair(S first, T second) {
			this.first = first;
			this.second = second;
		}

		public S getFirst() {
			return first;
		}

		public T getSecond() {
			return second;
		}
}
&lt;/code>&lt;/pre>
&lt;h2 id="1-implementing-arbitraryintrospector-matcher-interface">1. Implementing ArbitraryIntrospector, Matcher interface &lt;a href="#1-implementing-arbitraryintrospector-matcher-interface" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">public class PairIntrospector implements ArbitraryIntrospector, Matcher {
	private static final Matcher MATCHER = new AssignableTypeMatcher(Pair.class);

	@Override
	public boolean match(Property property) {
		return MATCHER.match(property);
	}

	@Override
	public ArbitraryIntrospectorResult introspect(ArbitraryGeneratorContext context) {
		ArbitraryProperty property = context.getArbitraryProperty();
		ArbitraryContainerInfo containerInfo = property.getContainerProperty().getContainerInfo();
		if (containerInfo == null) {
			return ArbitraryIntrospectorResult.EMPTY;
		}

		List&amp;lt;Arbitrary&amp;lt;?&amp;gt;&amp;gt; childrenArbitraries = context.getChildrenArbitraryContexts().getArbitraries();
		BuilderCombinator&amp;lt;List&amp;lt;Object&amp;gt;&amp;gt; builderCombinator = Builders.withBuilder(ArrayList::new);
		for (Arbitrary&amp;lt;?&amp;gt; childArbitrary : childrenArbitraries) {
			builderCombinator = builderCombinator.use(childArbitrary).in((list, element) -&amp;gt; {
				list.add(element);
				return list;
			});
		}

		return new ArbitraryIntrospectorResult(
			builderCombinator.build(it -&amp;gt; new Pair&amp;lt;&amp;gt;(it.get(0), it.get(1)))
		);
	}
}
&lt;/code>&lt;/pre>
&lt;h2 id="2-implementing-containerpropertygenerator-interface">2. Implementing ContainerPropertyGenerator interface &lt;a href="#2-implementing-containerpropertygenerator-interface" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">public class PairContainerPropertyGenerator implements ContainerPropertyGenerator {
	@Override
	public ContainerProperty generate(ContainerPropertyGeneratorContext context) {
		com.navercorp.fixturemonkey.api.property.Property property = context.getProperty();

		List&amp;lt;AnnotatedType&amp;gt; elementTypes = Types.getGenericsTypes(property.getAnnotatedType());
		if (elementTypes.size() != 2) {
			throw new IllegalArgumentException(
				&amp;quot;Pair elementsTypes must be have 1 generics type for element. &amp;quot;
					+ &amp;quot;propertyType: &amp;quot; + property.getType()
					+ &amp;quot;, elementTypes: &amp;quot; + elementTypes
			);
		}

		AnnotatedType firstElementType = elementTypes.get(0);
		AnnotatedType secondElementType = elementTypes.get(1);
		List&amp;lt;com.navercorp.fixturemonkey.api.property.Property&amp;gt; elementProperties = new ArrayList&amp;lt;&amp;gt;();
		elementProperties.add(
			new ElementProperty(
				property,
				firstElementType,
				0,
				0
			)
		);
		elementProperties.add(
			new ElementProperty(
				property,
				secondElementType,
				1,
				1
			)
		);

		return new ContainerProperty(
			elementProperties,
			new ArbitraryContainerInfo(1, 1, false)
		);
	}
}
&lt;/code>&lt;/pre>
&lt;h2 id="3-implementing-decomposedcontainervaluefactory-interface">3. Implementing DecomposedContainerValueFactory interface &lt;a href="#3-implementing-decomposedcontainervaluefactory-interface" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">public class PairDecomposedContainerValueFactory implements DecomposedContainerValueFactory {
	@Override
	public DecomposedContainerValue from(Object object) {
		Pair&amp;lt;?, ?&amp;gt; pair = (Pair&amp;lt;?, ?&amp;gt;)obj;
		List&amp;lt;Object&amp;gt; list = new ArrayList&amp;lt;&amp;gt;();
		list.add(pair.getFirst());
		list.add(pair.getSecond());
		return new DecomposableContainerValue(list, 2);
	}
}
&lt;/code>&lt;/pre>
&lt;h2 id="4-adding-addcontainertype-option">4. Adding &lt;code>addContainerType&lt;/code> option &lt;a href="#4-adding-addcontainertype-option" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-java">FixtureMonkey fixtureMonkey=FixtureMonkey.builder()
	.addContainerType(
 Pair.class,
		new PairContainerPropertyGenerator(),
 new PairIntrospector(),
 new PairDecomposedContainerValueFactory()
	)
	.build();
&lt;/code>&lt;/pre></description></item></channel></rss>